{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAgB5C,MAAM,OAAO,aAAc,SAAQ,SAAS;IAG1C;QACE,KAAK,CAAC;YACJ,IAAI,EAAE,YAAY;YAClB,SAAS,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC,CAAC;QANG,kBAAa,GAAY,KAAK,CAAC;IAOvC,CAAC;IAEO,GAAG,CAAC,GAAG,IAAW;QACxB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;SACtB;IACH,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,MAAiB;QAC9B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;QACrE,IAAI,CAAC,GAAG,CAAC,6CAA6C,EAAE,MAAM,CAAC,CAAC;IAClE,CAAC;IACD,KAAK,CAAC,WAAW,CAAC,OAA8B;QAC9C,IAAI,CAAC,GAAG,CAAC,gDAAgD,EAAE,OAAO,CAAC,CAAC;IACtE,CAAC;IACD,KAAK,CAAC,WAAW,CAAC,OAA8B;QAC9C,IAAI,CAAC,GAAG,CAAC,gDAAgD,EAAE,OAAO,CAAC,CAAC;IACtE,CAAC;IACD,KAAK,CAAC,WAAW,CAAC,QAAqB;QACrC,IAAI,CAAC,GAAG,CAAC,gDAAgD,EAAE,QAAQ,CAAC,CAAC;IACvE,CAAC;IACD,KAAK,CAAC,mBAAmB,CAAC,OAA8B;QACtD,IAAI,CAAC,GAAG,CAAC,wDAAwD,EAAE,OAAO,CAAC,CAAC;IAC9E,CAAC;IACD,KAAK,CAAC,eAAe,CAAC,MAAuB;QAC3C,IAAI,CAAC,GAAG,CAAC,oDAAoD,EAAE,MAAM,CAAC,CAAC;IACzE,CAAC;IACD,KAAK,CAAC,oBAAoB,CAAC,OAAuC;QAChE,IAAI,CAAC,GAAG,CAAC,yDAAyD,EAAE,OAAO,CAAC,CAAC;IAC/E,CAAC;IACD,KAAK,CAAC,uBAAuB,CAAC,OAA0C;QACtE,IAAI,CAAC,GAAG,CAAC,4DAA4D,EAAE,OAAO,CAAC,CAAC;IAClF,CAAC;IACD,KAAK,CAAC,gBAAgB,CAAC,QAA2B;QAChD,IAAI,CAAC,GAAG,CAAC,qDAAqD,EAAE,QAAQ,CAAC,CAAC;IAC5E,CAAC;IACD,KAAK,CAAC,mBAAmB,CAAC,QAA2B;QACnD,IAAI,CAAC,GAAG,CAAC,wDAAwD,EAAE,QAAQ,CAAC,CAAC;IAC/E,CAAC;IACD,KAAK,CAAC,kBAAkB,CAAC,KAAqB;QAC5C,IAAI,CAAC,GAAG,CAAC,uDAAuD,EAAE,KAAK,CAAC,CAAC;IAC3E,CAAC;IACD,KAAK,CAAC,aAAa,CAAC,KAAqB;QACvC,IAAI,CAAC,GAAG,CAAC,kDAAkD,EAAE,KAAK,CAAC,CAAC;IACtE,CAAC;IACD,KAAK,CAAC,gBAAgB,CAAC,aAA+B;QACpD,IAAI,CAAC,GAAG,CAAC,qDAAqD,EAAE,aAAa,CAAC,CAAC;IACjF,CAAC;IACD,KAAK,CAAC,iBAAiB,CAAC,WAA2B;QACjD,IAAI,CAAC,GAAG,CAAC,sDAAsD,EAAE,WAAW,CAAC,CAAC;IAChF,CAAC;CACF;AAED,MAAM,UAAU,GAAG,IAAI,aAAa,EAAE,CAAC;AAEvC,OAAO,EAAE,UAAU,EAAE,CAAC","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport {\n  AppMetricaPlugin,\n  YAMConfig,\n  YAMReportEventOptions,\n  YAMReportErrorOptions,\n  YAMLocation,\n  ECommerceScreen,\n  YAMShowProductCardEventOptions,\n  YAMShowProductDetailsEventOptions,\n  ECommerceCartItem,\n  ECommerceOrder,\n  YAMUserProfileId,\n  YAMUserProfile\n} from './definitions';\n\nexport class AppMetricaWeb extends WebPlugin implements AppMetricaPlugin {\n  private isMetricaLogs: boolean = false;\n\n  constructor() {\n    super({\n      name: 'AppMetrica',\n      platforms: ['web'],\n    });\n  }\n\n  private log(...vars: any[]) {\n    if (this.isMetricaLogs) {\n      console.log(...vars);\n    }\n  }\n\n  async activate(config: YAMConfig): Promise<void> {\n    this.isMetricaLogs = config.logs === undefined ? false : config.logs;\n    this.log('AppMetrica: Web not supported. [activate()]', config);\n  }\n  async reportEvent(options: YAMReportEventOptions): Promise<void> {\n    this.log('AppMetrica: Web not supported. [reportEvent()]', options);\n  }\n  async reportError(options: YAMReportErrorOptions): Promise<void> {\n    this.log('AppMetrica: Web not supported. [reportError()]', options);\n  }\n  async setLocation(location: YAMLocation): Promise<void> {\n    this.log('AppMetrica: Web not supported. [setLocation()]', location);\n  }\n  async setLocationTracking(options: { enabled: boolean; }): Promise<void> {\n    this.log('AppMetrica: Web not supported. [setLocationTracking()]', options);\n  }\n  async showScreenEvent(screen: ECommerceScreen): Promise<void> {\n    this.log('AppMetrica: Web not supported. [showScreenEvent()]', screen);\n  }\n  async showProductCardEvent(options: YAMShowProductCardEventOptions): Promise<void> {\n    this.log('AppMetrica: Web not supported. [showProductCardEvent()]', options);\n  }\n  async showProductDetailsEvent(options: YAMShowProductDetailsEventOptions): Promise<void> {\n    this.log('AppMetrica: Web not supported. [showProductDetailsEvent()]', options);\n  }\n  async addCartItemEvent(cartItem: ECommerceCartItem): Promise<void> {\n    this.log('AppMetrica: Web not supported. [addCartItemEvent()]', cartItem);\n  }\n  async removeCartItemEvent(cartItem: ECommerceCartItem): Promise<void> {\n    this.log('AppMetrica: Web not supported. [removeCartItemEvent()]', cartItem);\n  }\n  async beginCheckoutEvent(order: ECommerceOrder): Promise<void> {\n    this.log('AppMetrica: Web not supported. [beginCheckoutEvent()]', order);\n  }\n  async purchaseEvent(order: ECommerceOrder): Promise<void> {\n    this.log('AppMetrica: Web not supported. [purchaseEvent()]', order);\n  }\n  async setUserProfileId(userProfileId: YAMUserProfileId): Promise<void> {\n    this.log('AppMetrica: Web not supported. [setUserProfileId()]', userProfileId);\n  }\n  async reportUserProfile(userProfile: YAMUserProfile): Promise<void> {\n    this.log('AppMetrica: Web not supported. [reportUserProfile()]', userProfile);\n  }\n}\n\nconst AppMetrica = new AppMetricaWeb();\n\nexport { AppMetrica };\n"]}